{"remainingRequest":"C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\src\\components\\views\\items\\PaginatedList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\src\\components\\views\\items\\PaginatedList.vue","mtime":1607258683969},{"path":"C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\seok jin kim\\Desktop\\nodejs\\kidextra\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3BhZ2luYXRlZC1saXN0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFnZU51bTogMAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBsaXN0QXJyYXk6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgcGFnZVNpemU6IHsKICAgICAgLy8g7ZWcIO2OmOydtOyngOyXkCDstpzroKXrkKAg6rKM7Iuc66y87J2YIOyImOulvCDsnZjrr7jtlagKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6IDEwCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBuZXh0UGFnZTogZnVuY3Rpb24gbmV4dFBhZ2UoKSB7CiAgICAgIHRoaXMucGFnZU51bSArPSAxOwogICAgfSwKICAgIHByZXZQYWdlOiBmdW5jdGlvbiBwcmV2UGFnZSgpIHsKICAgICAgdGhpcy5wYWdlTnVtIC09IDE7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcGFnZUNvdW50OiBmdW5jdGlvbiBwYWdlQ291bnQoKSB7CiAgICAgIC8vICjstJ0g6rKM7Iuc66y8IOyImCAvIO2VnCDtjpjsnbTsp4Dsl5Ag7Lac66Cl65CgIOqyjOyLnOusvOydmCDsiJgp66W8IO2VoCDsi5zsl5Ag6rOE7IKwIOqwgOuKpQogICAgICB2YXIgbGlzdExlbmcgPSB0aGlzLmxpc3RBcnJheS5sZW5ndGgsCiAgICAgICAgICBsaXN0U2l6ZSA9IHRoaXMucGFnZVNpemUsCiAgICAgICAgICBwYWdlID0gTWF0aC5mbG9vcihsaXN0TGVuZyAvIGxpc3RTaXplKTsKICAgICAgaWYgKGxpc3RMZW5nICUgbGlzdFNpemUgPiAwKSBwYWdlICs9IDE7IC8vIOunjOyVvSDrgpjrqLjsp4DqsIAg7KCV7ZmV7Z6IIDDsnbQg65ao7Ja07KeA64qUIOqyveyasOqwgCDslYTri4jrnbzrqbQg66y47KCc65CoLgogICAgICAvLyAxMTXqsJwgLT4g7Y6Y7J207KeA64u5IDEw6rCcIC0+IDEx7Y6Y7J207KeAIOunjOuTpOyWtOynhCDrkqQg64Ko7J2AIDXqsJzqsIAg67KE66Ck7KeQCiAgICAgIC8vIOuUsOudvOyEnCDrgpjriIgg64KY66i47KeA6rCAIDDrs7Tri6Qg7YGs66m0IHBhZ2XrpbwgMSDspp3qsIDsi5zsvJzso7zripQg6rKDLgoKICAgICAgLyoNCiAgICAgIOyVhOuLiOuptCBwYWdlID0gTWF0aC5mbG9vcigobGlzdExlbmcgLSAxKSAvIGxpc3RTaXplKSArIDE7DQogICAgICDsnbTrn7Dsi53snLzroZwgaWYg66y4IOyXhuydtCDqs6DsuaAg7IiY64+EIOyeiOuLpCENCiAgICAgICovCgogICAgICByZXR1cm4gcGFnZTsKICAgIH0sCiAgICBwYWdpbmF0ZWREYXRhOiBmdW5jdGlvbiBwYWdpbmF0ZWREYXRhKCkgewogICAgICAvLyDtlZwg7Y6Y7J207KeA7JeQIOuztOyXrOyniCDrjbDsnbTthLDrk6TsnYQg7KCE64us7ZW07KO864qUIO2VqOyImAogICAgICAvLyDsnpDsi6DsnbQg7ISk7KCV7ZWcIO2OmOydtOyngOydmCDtgazquLDsl5Ag66ee7LawIOuNsOydtO2EsOulvCDrsJjtmZjsi5zsvJzso7zripQg7Jet7ZWgCiAgICAgIHZhciBzdGFydCA9IHRoaXMucGFnZU51bSAqIHRoaXMucGFnZVNpemUsCiAgICAgICAgICAvL3N0YXJ0ID0gMCoxMCA9IDAKICAgICAgZW5kID0gc3RhcnQgKyB0aGlzLnBhZ2VTaXplOyAvL2VuZCA9IHN0YXJ0K3BhZ2UgPSAwKzEwID0gMTAKCiAgICAgIHJldHVybiB0aGlzLmxpc3RBcnJheS5zbGljZShzdGFydCwgZW5kKTsgLy8wfjnrsojsp7gg7J24642x7Iqk6rmM7KeAIOuzteyCrO2VmOyXrCDqsJLsnYQg7KCE64us7ZW07KSA64ukLgogICAgfQogIH0KfTs="},{"version":3,"sources":["PaginatedList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AALA,GAPA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,OAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,WAAA,OAAA,IAAA,CAAA;AACA;AANA,GAlBA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;AACA,UAAA,QAAA,GAAA,KAAA,SAAA,CAAA,MAAA;AAAA,UACA,QAAA,GAAA,KAAA,QADA;AAAA,UAEA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAFA;AAGA,UAAA,QAAA,GAAA,QAAA,GAAA,CAAA,EAAA,IAAA,IAAA,CAAA,CAJA,CAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KAfA;AAgBA,IAAA,aAhBA,2BAgBA;AACA;AACA;AACA,UAAA,KAAA,GAAA,KAAA,OAAA,GAAA,KAAA,QAAA;AAAA,UAAA;AACA,MAAA,GAAA,GAAA,KAAA,GAAA,KAAA,QADA,CAHA,CAIA;;AACA,aAAA,KAAA,SAAA,CAAA,KAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CALA,CAKA;AACA;AAtBA;AA1BA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <table>\r\n      <tr>\r\n        <th>NO</th>\r\n        <th>TEL</th>\r\n        <th>ADDRESS</th>\r\n        <th>NAME</th>\r\n      </tr>\r\n      <tr v-for=\"p in paginatedData\" :key=\"p.no\">\r\n        <td>{{ p.no }}</td>\r\n        <td>{{ p.tel }}</td>\r\n        <td>{{ p.address }}</td>\r\n        <td>{{ p.name }}</td>\r\n      </tr>\r\n    </table>\r\n    <div class=\"btn-cover\">\r\n      <button :disabled=\"pageNum === 0\" @click=\"prevPage\" class=\"page-btn\">\r\n        이전\r\n      </button>\r\n      <span class=\"page-count\">{{ pageNum + 1 }} / {{ pageCount }} 페이지</span>\r\n      <button :disabled=\"pageNum >= pageCount - 1\" @click=\"nextPage\" class=\"page-btn\">\r\n        다음\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'paginated-list',\r\n  data () {\r\n    return {\r\n      pageNum: 0\r\n    }\r\n  },\r\n  props: {\r\n    listArray: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    pageSize: { // 한 페이지에 출력될 게시물의 수를 의미함\r\n      type: Number,\r\n      required: false,\r\n      default: 10\r\n    }\r\n  },\r\n  methods: {\r\n    nextPage () {\r\n      this.pageNum += 1;\r\n    },\r\n    prevPage () {\r\n      this.pageNum -= 1;\r\n    }\r\n  },\r\n  computed: {\r\n    pageCount () { // (총 게시물 수 / 한 페이지에 출력될 게시물의 수)를 할 시에 계산 가능\r\n      let listLeng = this.listArray.length,\r\n          listSize = this.pageSize,\r\n          page = Math.floor(listLeng / listSize);\r\n      if (listLeng % listSize > 0) page += 1;\r\n      // 만약 나머지가 정확히 0이 떨어지는 경우가 아니라면 문제됨.\r\n      // 115개 -> 페이지당 10개 -> 11페이지 만들어진 뒤 남은 5개가 버려짐\r\n      // 따라서 나눈 나머지가 0보다 크면 page를 1 증가시켜주는 것.\r\n\r\n      /*\r\n      아니면 page = Math.floor((listLeng - 1) / listSize) + 1;\r\n      이런식으로 if 문 없이 고칠 수도 있다!\r\n      */\r\n      return page;\r\n    },\r\n    paginatedData () {\r\n        // 한 페이지에 보여질 데이터들을 전달해주는 함수\r\n        // 자신이 설정한 페이지의 크기에 맞춰 데이터를 반환시켜주는 역할\r\n      const start = this.pageNum * this.pageSize, //start = 0*10 = 0\r\n            end = start + this.pageSize; //end = start+page = 0+10 = 10\r\n      return this.listArray.slice(start, end); //0~9번째 인덱스까지 복사하여 값을 전달해준다.\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ntable {\r\n  width: 25%;\r\n  border-collapse: collapse;\r\n}\r\ntable th {\r\n  font-size: 0.7rem;\r\n}\r\ntable tr {\r\n  height: 2rem;\r\n  text-align: center;\r\n  border-bottom: 1px solid #505050;\r\n}\r\ntable tr:first-of-type {\r\n  border-top: 2px solid #404040;\r\n}\r\ntable tr td {\r\n  padding: 1rem 0;\r\n  font-size: 1.1rem;\r\n}\r\n.btn-cover {\r\n  margin-top: 1.5rem;\r\n  text-align: center;\r\n}\r\n.btn-cover .page-btn {\r\n  width: 5rem;\r\n  height: 2rem;\r\n  letter-spacing: 0.5px;\r\n}\r\n.btn-cover .page-count {\r\n  padding: 0 1rem;\r\n}\r\n</style>"],"sourceRoot":"src/components/views/items"}]}